name: Publish SPA

on:
  workflow_call:
    inputs:
      CDN_BUCKET:
        type: string
        required: true
      SPA_PATH:
        type: string
        required: true
      AWS_REGION:
        type: string
        required: true
        default: 'us-east-1'
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
        description: 'AWS Access Key ID'
      AWS_ACCESS_KEY_SECRET:
        required: true
        description: 'AWS Access Key Secret'
    outputs:
      package_name: ${{ steps.extract_package_name.outputs.package_name }}
      package_version: ${{ steps.extract_package_name.outputs.package_version }}
      package_bucket_path: ${{ steps.extract_package_name.outputs.package_bucket_path }}
    
jobs:
  extract-package-metadata:
    outputs:
      package_name: ${{ steps.extract_package_name.outputs.package_name }}
      package_version: ${{ steps.extract_package_name.outputs.package_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Extract package name
        id: extract_package_name
        working-directory: ${{ inputs.SPA_PATH }}
        run: |
          PACKAGE_NAME=$(jq -r '.name' package.json)
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_ENV
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_ENV
  
  # use yarn to build, zero-install
  build:
    runs-on: ubuntu-latest
    needs: extract-package-metadata
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'yarn'
      - name: Build SPA
        working-directory: ${{ inputs.SPA_PATH }}
        run: yarn build
    
  publish-to-s3:
    runs-on: ubuntu-latest
    needs: extract-package-metadata
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Get new path in bucket
        id: get_new_path
        run: |
          PACKAGE_BUCKET_PATH=${{ steps.extract-package-metadata.outputs.package_name }}/${{ steps.extract-package-metadata.outputs.package_version }}
          echo "package_bucket_path=$PACKAGE_BUCKET_PATH" >> $GITHUB_ENV
      - name: Upload SPA to S3
        run: aws s3 sync ${{ inputs.SPA_PATH }}/ s3://${{ inputs.CDN_BUCKET }}/${{ steps.get_new_path.outputs.package_bucket_path }}